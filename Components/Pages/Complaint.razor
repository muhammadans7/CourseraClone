@page "/complaint"
@inject courseraClone.Services.ComplaintService ComplaintService
@attribute [StreamRendering]
@rendermode InteractiveServer

<h2>Submit a Complaint</h2>

<div class="container">
    <!-- Complaint Form -->
    <EditForm Model="@complaint" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Your Name</label>
            <InputText @bind-Value="complaint.Name" class="form-control" placeholder="Enter your name" required />
            <ValidationMessage For="@(() => complaint.Name)" />
        </div>

        <div class="form-group">
            <label for="email">Your Email</label>
            <InputText @bind-Value="complaint.Email" class="form-control" placeholder="Enter your email" required />
            <ValidationMessage For="@(() => complaint.Email)" />
        </div>

        <div class="form-group">
            <label for="complaintText">Your Complaint</label>
            <InputTextArea @bind-Value="complaint.ComplaintText" class="form-control" placeholder="Enter your complaint" required />
            <ValidationMessage For="@(() => complaint.ComplaintText)" />
        </div>

        <button type="submit" class="btn btn-primary">Submit Complaint</button>
    </EditForm>

    <div id="responseMessage" class="mt-3">@responseMessage</div>
</div>

@code {
    private ComplaintModel complaint = new ComplaintModel();
    private string responseMessage;
    
   

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await ComplaintService.SubmitComplaintAsync(complaint.Name, complaint.Email, complaint.ComplaintText);

            if (result)
            {
                responseMessage = "Your complaint has been submitted successfully.";
            
                complaint = new ComplaintModel();
            }
            else
            {
                responseMessage = "An error occurred while submitting your complaint. Please try again.";
            }
        }
        catch (Exception ex)
        {
            responseMessage = $"An error occurred: {ex.Message}";
        }
    }

    public class ComplaintModel
    {
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string ComplaintText { get; set; } = string.Empty;
    }
}
